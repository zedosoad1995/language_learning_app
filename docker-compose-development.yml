version: "3.8"
services:
  frontend:
    restart: always
    command : npm start
    build: 
      context: ./frontend
      dockerfile: dockerfiles/Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/:/usr/src/frontend
    stdin_open: true
    environment:
      - REACT_ENV=dev
    depends_on:
      - backend
    networks:
      - db-network

  backend:
    build: 
      context: ./backend
      dockerfile: dockerfiles/Dockerfile.dev
    restart: always
    ports:
      - 8000:8000
    volumes:
      - ./backend/:/usr/src/backend
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DB_NAME=admin
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DJANGO_ENV=dev
    networks:
      - db-network
    depends_on:
      - db
      - migration

  migration:
    build: 
      context: ./backend
      dockerfile: dockerfiles/Dockerfile.dev
    command: python manage.py migrate --noinput
    environment:
      - DB_NAME=admin
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DJANGO_ENV=dev
    networks:
      - db-network
    depends_on:
      - db

  db:
    image: postgres:13.0-alpine
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=admin
    networks:
      - db-network
    volumes:
      - postgres_data:/var/lib/postgresql/data/

networks:
  db-network:
    driver: bridge

volumes:
  postgres_data:
